import pandas as pd
import os

workdir: config['workdir']
image=config['image']
output_path=config['output_path']
sources=config['sources']

run_wildcards=config.get('run_wildcards', '')

# This "hello" rule prints 'Hello World! to the console.
#
# We use a full file path in this rule (i.e. no wildcards)
#
# A "success" file is written to indicate job completion.
#
rule hello:
    output:
        touch('%s/hello.success' % output_path)
    shell:
        'echo "Hello World!"'

# This "hello_or_goodbye" rule takes two parameters:
#     - param-level "say_hello" flag
#     - top-level "name" string
#
# Because this rule uses wildcards to specify a generic output
# path, we specify the "FINAL" file to help snakemake
# build a proper DAG.
#
# Also note that this rule depends on "hello"
#
rule hello_or_goodbye:
    input:
        '%s/hello.success' % output_path
    output:
        touch('{output_path}/%s/hello_world.success' % run_wildcards)
    params:
        FINAL='hello_world.success'
    run:
        name = config.get('name', 'No One')
        if wildcards.say_hello == 'say_hello':
            shell('echo "<< Hello %s >>"' % name)
        else:
            shell('echo "<< Goodbye %s >>"' % name)

